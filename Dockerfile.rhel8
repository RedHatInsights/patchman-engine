FROM registry.access.redhat.com/ubi8 as buildimg

ARG INSTALL_TOOLS=no

# install build, development and test environment

RUN dnf module -y enable postgresql:12 && \
    dnf install -y go-toolset postgresql git-core diffutils

ENV GOPATH=/go \
    GO111MODULE=on \
    GOPROXY=https://proxy.golang.org \
    PATH=$PATH:/go/bin

# now add patchman sources and build app
RUN adduser --gid 0 -d /go --no-create-home insights
RUN mkdir -p /go/src/app && chown -R insights:root /go
USER insights
WORKDIR /go/src/app

ADD --chown=insights:root go.mod go.sum     /go/src/app/

RUN go mod download

RUN if [ "$INSTALL_TOOLS" == "yes" ] ; then \
        go get -u github.com/swaggo/swag/cmd/swag && \
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
        | sh -s -- -b $(go env GOPATH)/bin latest ; \
    fi

ADD --chown=insights:root dev/kafka/secrets/ca.crt /opt/
ADD --chown=insights:root base                     /go/src/app/base
ADD --chown=insights:root database_admin           /go/src/app/database_admin
ADD --chown=insights:root docs                     /go/src/app/docs
ADD --chown=insights:root evaluator                /go/src/app/evaluator
ADD --chown=insights:root listener                 /go/src/app/listener
ADD --chown=insights:root manager                  /go/src/app/manager
ADD --chown=insights:root platform                 /go/src/app/platform
ADD --chown=insights:root scripts                  /go/src/app/scripts
ADD --chown=insights:root vmaas_sync               /go/src/app/vmaas_sync
ADD --chown=insights:root main.go                   /go/src/app/

RUN go build -v main.go

EXPOSE 8080

# ---------------------------------------
# runtime image with only necessary stuff
FROM registry.access.redhat.com/ubi8 as runtimeimg

ADD scripts/manifest /manifest
# remember and later exclude base image rpms except for (redhat|centos-linux|fedora)-release
RUN /manifest/rpm_list.sh "(redhat|centos-linux|fedora)-release" > /tmp/base_rpm.txt

ENV MANIFEST_PREFIX="mgmt_services/patchman-engine/"

RUN dnf module -y enable postgresql:12 && \
    dnf install -y postgresql diffutils && \
    /manifest/rpm_list.sh > /tmp/final_rpm.txt

RUN adduser --gid 0 -d /go --no-create-home insights

RUN curl -L -o /usr/bin/haberdasher \
    https://github.com/RedHatInsights/haberdasher/releases/latest/download/haberdasher_linux_amd64 && \
    chmod 755 /usr/bin/haberdasher

ADD --chown=insights:root go.sum                     /go/src/app/
ADD --chown=insights:root scripts                    /go/src/app/scripts
ADD --chown=insights:root database_admin/*.sh        /go/src/app/database_admin/
ADD --chown=insights:root database_admin/*.sql       /go/src/app/database_admin/
ADD --chown=insights:root database_admin/schema      /go/src/app/database_admin/schema
ADD --chown=insights:root database_admin/migrations  /go/src/app/database_admin/migrations
ADD --chown=insights:root vmaas_sync/entrypoint.sh   /go/src/app/vmaas_sync/

RUN /manifest/generate.sh /manifest.txt $MANIFEST_PREFIX /tmp/base_rpm.txt /tmp/final_rpm.txt "" /go/src/app/go.sum && \
    echo 'MANIFEST:' && cat /manifest.txt

COPY --from=buildimg /go/src/app/main /go/src/app/

USER insights
WORKDIR /go/src/app

EXPOSE 8080
