// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-11-27 11:02:57.290336153 +0100 CET m=+0.082305077

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
  "openapi": "3.0.0",
  "info": {
    "description": "{{.Description}}",
    "title": "{{.Title}}",
    "contact": {},
    "license": {},
    "version": "{{.Version}}"
  },
  "paths": {
    "/api/patch/v1/advisories": {
      "get": {
        "description": "Show me all applicable errata for all my systems",
        "summary": "Show me all applicable errata for all my systems",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.AdvisoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/patch/v1/advisories/{advisory_id}": {
      "get": {
        "description": "Show me details an advisory by given advisory name",
        "summary": "Show me details an advisory by given advisory name",
        "parameters": [
          {
            "description": "Advisory ID",
            "name": "advisory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.AdvisoryDetailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/patch/v1/advisories/{advisory_id}/systems": {
      "get": {
        "description": "Show me systems on which the given advisory is applicable",
        "summary": "Show me systems on which the given advisory is applicable",
        "parameters": [
          {
            "description": "Advisory ID",
            "name": "advisory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.AdvisorySystemsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/patch/v1/systems": {
      "get": {
        "description": "Show me all my systems",
        "summary": "Show me all my systems",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.SystemsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/patch/v1/systems/{inventory_id}": {
      "get": {
        "description": "Show me details about a system by given inventory id",
        "summary": "Show me details about a system by given inventory id",
        "parameters": [
          {
            "description": "Inventory ID",
            "name": "inventory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.SystemDetailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/patch/v1/systems/{inventory_id}/advisories": {
      "get": {
        "description": "Show me advisories for a system by given inventory id",
        "summary": "Show me advisories for a system by given inventory id",
        "parameters": [
          {
            "description": "Inventory ID",
            "name": "inventory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.SystemAdvisoriesResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [{"url": "http://localhost:8080"}],
  "components": {
    "schemas": {
      "controllers.AdvisoriesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "description": "advisories items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/controllers.AdvisoryItem"
            }
          },
          "links": {
            "$ref": "#/components/schemas/controllers.Links"
          },
          "meta": {
            "$ref": "#/components/schemas/controllers.AdvisoryMeta"
          }
        }
      },
      "controllers.AdvisoryDetailAttributes": {
        "type": "object",
        "properties": {
          "cves": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "fixes": {
            "type": "string"
          },
          "modified_date": {
            "type": "string"
          },
          "public_date": {
            "type": "string"
          },
          "references": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "severity": {
            "type": "string"
          },
          "solution": {
            "type": "string"
          },
          "synopsis": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          }
        }
      },
      "controllers.AdvisoryDetailItem": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/controllers.AdvisoryDetailAttributes"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "controllers.AdvisoryDetailResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/controllers.AdvisoryDetailItem"
          }
        }
      },
      "controllers.AdvisoryItem": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/controllers.AdvisoryItemAttributes"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "controllers.AdvisoryItemAttributes": {
        "type": "object",
        "properties": {
          "advisory_type": {
            "type": "integer"
          },
          "applicable_systems": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "public_date": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          },
          "synopsis": {
            "type": "string"
          }
        }
      },
      "controllers.AdvisoryMeta": {
        "type": "object",
        "properties": {
          "data_format": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "pages": {
            "type": "integer"
          },
          "public_from": {
            "type": "integer"
          },
          "public_to": {
            "type": "integer"
          },
          "severity": {
            "type": "string"
          },
          "show_all": {
            "type": "boolean"
          },
          "sort": {
            "type": "boolean"
          },
          "total_items": {
            "type": "integer"
          }
        }
      },
      "controllers.AdvisorySystemsMeta": {
        "type": "object",
        "properties": {
          "advisory": {
            "type": "string"
          },
          "data_format": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "filter": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "pages": {
            "type": "integer"
          },
          "total_items": {
            "type": "integer"
          }
        }
      },
      "controllers.AdvisorySystemsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/controllers.SystemItem"
            }
          },
          "links": {
            "$ref": "#/components/schemas/controllers.Links"
          },
          "meta": {
            "$ref": "#/components/schemas/controllers.AdvisorySystemsMeta"
          }
        }
      },
      "controllers.Links": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "next": {
            "type": "string"
          },
          "previous": {
            "type": "string"
          }
        }
      },
      "controllers.SystemAdvisoriesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "description": "advisories items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/controllers.AdvisoryItem"
            }
          },
          "links": {
            "$ref": "#/components/schemas/controllers.Links"
          },
          "meta": {
            "$ref": "#/components/schemas/controllers.AdvisoryMeta"
          }
        }
      },
      "controllers.SystemDetailResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/controllers.SystemItem"
          }
        }
      },
      "controllers.SystemItem": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/controllers.SystemItemAttributes"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "controllers.SystemItemAttributes": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "last_evaluation": {
            "type": "string"
          },
          "last_upload": {
            "type": "string"
          },
          "rhba_count": {
            "type": "integer"
          },
          "rhea_count": {
            "type": "integer"
          },
          "rhsa_count": {
            "type": "integer"
          }
        }
      },
      "controllers.SystemsMeta": {
        "type": "object",
        "properties": {
          "data_format": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "filter": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "pages": {
            "type": "integer"
          },
          "total_items": {
            "type": "integer"
          }
        }
      },
      "controllers.SystemsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/controllers.SystemItem"
            }
          },
          "links": {
            "$ref": "#/components/schemas/controllers.Links"
          },
          "meta": {
            "$ref": "#/components/schemas/controllers.SystemsMeta"
          }
        }
      }
    }
  }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
