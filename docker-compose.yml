version: '3.4'

services:
  db:
    container_name: db
    build:
      context: .
      dockerfile: dev/database/Dockerfile
    image: patchman-engine-db
    volumes:
      - db-data:/var/lib/pgsql/data
    ports:
      - 5433:5432
    env_file:
      - ./conf/database.env

  kafka:
    container_name: kafka
    build:
      context: .
      dockerfile: ./dev/kafka/Dockerfile
    image: patchman-engine-kafka
    env_file:
      - ./conf/kafka.env
    volumes:
      - ./dev/kafka/secrets:/etc/kafka/secrets
      - ./dev/kafka:/app
    ports:
      - 29092:29092
      - 29093:29093
      - 9092:9092
      - 9093:9093
      - 9099:9099
    security_opt:
      - label=disable
    # https://github.com/wurstmeister/kafka-docker/issues/389#issuecomment-875428899
    restart: always

  platform:
    container_name: platform
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - INSTALL_TOOLS=yes
      target: buildimg
    image: patchman-engine-app
    env_file:
      - ./conf/platform.env
      - ./conf/gorun.env
    command: ./dev/scripts/docker-compose-entrypoint.sh platform
    restart: unless-stopped
    depends_on:
      - db
      - kafka
    ports:
      - 9001:9001
      - 9005:9005
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  db_admin:
    container_name: db_admin
    image: patchman-engine-app
    env_file:
      - ./conf/common.env
      - ./conf/database_admin.env
      - ./conf/gorun.env
    command: ./database_admin/entrypoint.sh
    depends_on:
      - db
      - platform
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  db_feed:
    container_name: db_feed
    image: patchman-engine-app
    env_file:
      - ./conf/test.env
      - ./conf/gorun.env
    command: go run ./scripts/feed_db.go
    depends_on:
      - db
      - platform
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  manager:
    container_name: manager
    image: patchman-engine-app
    env_file:
      - ./conf/common.env
      - ./conf/manager.env
      - ./conf/gorun.env
    command: ./dev/scripts/docker-compose-entrypoint.sh manager
    ports:
      - 8080:8080
      - 9080:9080 # metrics
      - 9000:9000 # private port - pprof
    depends_on:
      - db
      - platform
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  listener:
    container_name: listener
    image: patchman-engine-app
    env_file:
      - ./conf/common.env
      - ./conf/listener.env
      - ./conf/gorun.env
    command: ./dev/scripts/docker-compose-entrypoint.sh listener
    ports:
      - 8081:8080
      - 9081:9080 # metrics
      - 9002:9000 # private port - pprof
    depends_on:
      - db
      - platform
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  evaluator_upload:
    container_name: evaluator_upload
    image: patchman-engine-app
    env_file:
      - ./conf/common.env
      - ./conf/evaluator_common.env
      - ./conf/evaluator_upload.env
      - ./conf/gorun.env
    command: ./dev/scripts/docker-compose-entrypoint.sh evaluator
    ports:
      - 8082:8080
      - 9003:9000 # private port - pprof
    depends_on:
      - db
      - platform
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  evaluator_recalc:
    container_name: evaluator_recalc
    image: patchman-engine-app
    env_file:
      - ./conf/common.env
      - ./conf/evaluator_common.env
      - ./conf/evaluator_recalc.env
      - ./conf/gorun.env
    command: ./dev/scripts/docker-compose-entrypoint.sh evaluator
    ports:
      - 8084:8080
      - 9004:9000 # private port - pprof
    depends_on:
      - db
      - platform
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  vmaas_sync:
    container_name: vmaas_sync
    image: patchman-engine-app
    env_file:
      - ./conf/common.env
      - ./conf/vmaas_sync.env
      - ./conf/gorun.env
    command: ./dev/scripts/docker-compose-entrypoint.sh job vmaas_sync
    ports:
      - 8083:8080
    restart: on-failure
    depends_on:
      - db
      - kafka
      - platform
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  admin:
    container_name: admin
    image: patchman-engine-app
    env_file:
      - ./conf/common.env
      - ./conf/admin_api.env
      - ./conf/gorun.env
    command: ./dev/scripts/docker-compose-entrypoint.sh admin
    ports:
      - 8085:8080
    depends_on:
      - db
      - kafka
      - platform
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  prometheus:
    container_name: prometheus
    image: docker.io/prom/prometheus:v2.50.0
    volumes:
      - ./dashboards/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - 9090:9090
    restart: unless-stopped
    profiles:
      - monitoring
    security_opt:
      - label=disable

  grafana:
    container_name: grafana
    build:
      context: ./
      dockerfile: ./dev/grafana/Dockerfile
    image: patchman-grafana:latest
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    profiles:
      - monitoring

volumes:
  db-data:
  grafana-data:
  prometheus-data:
