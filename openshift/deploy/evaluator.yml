apiVersion: v1
kind: Template
metadata:
  name: patchman-engine-evaluator

parameters:
  - name: IMAGE_NAMESPACE
    displayName: Image namespace
  - name: IMAGE_TAG
    displayName: Image tag
    value: latest
  - name: KAFKA_ADDRESS
  - name: INVENTORY_ADDRESS
  - name: VMAAS_ADDRESS

objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels: { app: patchman-engine }
      name: patchman-engine-evaluator
    spec:
      replicas: 1
      selector:
        app: patchman-engine
        deploymentconfig: patchman-engine-evaluator
      template:
        metadata:
          labels:
            app: patchman-engine
            deploymentconfig: patchman-engine-evaluator
          name: patchman-engine-evaluator
        spec:
          containers:
            - image: ${IMAGE_NAMESPACE}/patchman-engine-app:${IMAGE_TAG}
              imagePullPolicy: Always
              name: patchman-engine-evaluator
              command: [ ./evaluator/entrypoint.sh ]
              resources:
                limits: { cpu: 500m,  memory: 512Mi }
                requests: { cpu: 200m, memory: 512Mi }
              livenessProbe:
                httpGet: { path: /metrics, port: 8081, scheme: HTTP }
              readinessProbe:
                httpGet: { path: /metrics, port: 8081, scheme: HTTP }
              env:
                - { name: LOG_LEVEL, value: debug }
                - { name: LOG_STYLE, value: plain }
                - { name: GIN_MODE, value: release }

                - { name: KAFKA_ADDRESS, value: "${KAFKA_ADDRESS}" }
                - { name: KAFKA_GROUP, value: patchman }
                - { name: GOMAXPROCS, value: "8" }
                - { name: CONSUMER_COUNT, value: "8" }
                - { name: EVAL_TOPIC, value: patchman.evaluator.upload }

                - { name: INVENTORY_ADDRESS, value: "${INVENTORY_ADDRESS}" }
                - { name: VMAAS_ADDRESS, value: "${VMAAS_ADDRESS}" }

                - { name: DB_TYPE, value: postgres }
                - { name: DB_HOST, value: patchman-engine-database }
                - { name: DB_PORT, value: "5432" }
                - { name: DB_NAME, value: patchman }
                - { name: DB_USER, value: evaluator }
                - name: DB_PASSWD
                  valueFrom:
                    secretKeyRef:
                      name:  patchman-engine-database-passwords
                      key: evaluator-database-password
                - { name: CW_AWS_REGION, value: us-east-1 }
                - { name: CW_AWS_LOG_GROUP, value: platform-dev }
                - name: CW_AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: cloudwatch
                      key: CW_AWS_ACCESS_KEY_ID
                - name: CW_AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: cloudwatch
                      key: CW_AWS_SECRET_ACCESS_KEY

          dnsPolicy: ClusterFirst
          restartPolicy: Always
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - patchman-engine-evaluator
            from:
              kind: ImageStreamTag
              name: patchman-engine-app:${IMAGE_TAG}
              namespace: ${IMAGE_NAMESPACE}
          type: ImageChange

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: patchman-engine
      name: patchman-engine-evaluator
    spec:
      type: ClusterIP
      ports:
        - name: 8081-tcp
          port: 8081
          protocol: TCP
          targetPort: 8081
      selector:
        app: patchman-engine
        deploymentconfig: patchman-engine-evaluator

