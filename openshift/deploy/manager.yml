apiVersion: v1
kind: Template
metadata:
  name: patchman-engine-manager

parameters:
  - name: IMAGE_NAMESPACE
    displayName: Image namespace
  - name: IMAGE_TAG
    displayName: Image tag
    value: latest
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels: { app: patchman-engine }
      name: patchman-engine-manager
    spec:
      replicas: 1
      selector:
        app: patchman-engine
        deploymentconfig: patchman-engine-manager
      template:
        metadata:
          labels:
            app: patchman-engine
            deploymentconfig: patchman-engine-manager
          name: patchman-engine-manager
        spec:
          containers:
            - image: ${IMAGE_NAMESPACE}/patchman-engine-app:${IMAGE_TAG}
              imagePullPolicy: Always
              name: patchman-engine-manager
              command: [ ./manager/entrypoint.sh ]
              resources:
                limits: { cpu: 200m,  memory: 128Mi }
                requests: { cpu: 200m, memory: 128Mi }
              livenessProbe:
                httpGet: { path: /metrics, port: 8080, scheme: HTTP }
              readinessProbe:
                httpGet: { path: /metrics, port: 8080, scheme: HTTP }
              env:
                - { name: LOG_LEVEL, value: debug }
                - { name: LOG_STYLE, value: plain }
                - { name: GIN_MODE, value: release }
                - { name: GOMAXPROCS, value: 8 }

                - { name: DB_TYPE, value: postgres }
                - { name: DB_HOST, value: patchman-engine-database }
                - { name: DB_PORT, value: "5432" }
                - { name: DB_NAME, value: patchman }
                - { name: DB_USER, value: manager }
                - name: DB_PASSWD
                  valueFrom:
                    secretKeyRef:
                      name:  patchman-engine-database-passwords
                      key: manager-database-password
                - { name: CW_AWS_REGION, value: us-east-1 }
                - { name: CW_AWS_LOG_GROUP, value: platform-dev }
                - name: CW_AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: cloudwatch
                      key: CW_AWS_ACCESS_KEY_ID
                - name: CW_AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: cloudwatch
                      key: CW_AWS_SECRET_ACCESS_KEY

          dnsPolicy: ClusterFirst
          restartPolicy: Always
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - patchman-engine-manager
            from:
              kind: ImageStreamTag
              name: patchman-engine-app:${IMAGE_TAG}
              namespace: ${IMAGE_NAMESPACE}
          type: ImageChange

  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: '8080'
        prometheus.io/scrape: "true"
      labels:
        app: patchman-engine
      name: patchman-engine-manager
    spec:
      type: ClusterIP
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: patchman-engine
        deploymentconfig: patchman-engine-manager

